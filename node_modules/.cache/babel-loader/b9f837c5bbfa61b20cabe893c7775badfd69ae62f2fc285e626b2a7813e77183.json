{"ast":null,"code":"var _jsxFileName = \"/home/ignatius/Escritorio/my-react-app/src/CollapsibleTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CollapsibleTable(_ref) {\n  _s();\n  let {\n    data\n  } = _ref;\n  const [tableData, setTableData] = useState(data);\n  const [collapsedRows, setCollapsedRows] = useState([]);\n  const toggleRow = (key, index1, index2) => {\n    const isRowCollapsed = collapsedRows.includes(`${key}-${index1}-${index2}`);\n    if (isRowCollapsed) {\n      setCollapsedRows(collapsedRows.filter(row => row !== `${key}-${index1}-${index2}`));\n    } else {\n      setCollapsedRows([...collapsedRows, `${key}-${index1}-${index2}`]);\n    }\n  };\n  const isRowCollapsed = (key, index1, index2) => {\n    return collapsedRows.includes(`${key}-${index1}-${index2}`);\n  };\n  const renderTable = () => {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Index 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Index 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(tableData).map(key => tableData[key].map(_ref2 => {\n          let [index1, index2] = _ref2;\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              onClick: () => toggleRow(key, index1, index2),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: index1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: index2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), !isRowCollapsed(key, index1, index2) && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"3\",\n                children: [\"Additional information for \", key, \" \", index1, \" \", index2]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this)]\n          }, `${key}-${index1}-${index2}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this);\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderTable()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n}\n_s(CollapsibleTable, \"7T8Wcceshs4bpavj3AlOnL2DuzA=\");\n_c = CollapsibleTable;\nexport default CollapsibleTable;\nvar _c;\n$RefreshReg$(_c, \"CollapsibleTable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CollapsibleTable","_ref","_s","data","tableData","setTableData","collapsedRows","setCollapsedRows","toggleRow","key","index1","index2","isRowCollapsed","includes","filter","row","renderTable","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","_ref2","Fragment","onClick","colSpan","_c","$RefreshReg$"],"sources":["/home/ignatius/Escritorio/my-react-app/src/CollapsibleTable.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction CollapsibleTable({ data }) {\n  const [tableData, setTableData] = useState(data);\n  const [collapsedRows, setCollapsedRows] = useState([]);\n\n  const toggleRow = (key, index1, index2) => {\n    const isRowCollapsed = collapsedRows.includes(`${key}-${index1}-${index2}`);\n    if (isRowCollapsed) {\n      setCollapsedRows(collapsedRows.filter((row) => row !== `${key}-${index1}-${index2}`));\n    } else {\n      setCollapsedRows([...collapsedRows, `${key}-${index1}-${index2}`]);\n    }\n  };\n\n  const isRowCollapsed = (key, index1, index2) => {\n    return collapsedRows.includes(`${key}-${index1}-${index2}`);\n  };\n\n  const renderTable = () => {\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>Key</th>\n            <th>Index 1</th>\n            <th>Index 2</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(tableData).map((key) =>\n            tableData[key].map(([index1, index2]) => (\n              <React.Fragment key={`${key}-${index1}-${index2}`}>\n                <tr onClick={() => toggleRow(key, index1, index2)}>\n                  <td>{key}</td>\n                  <td>{index1}</td>\n                  <td>{index2}</td>\n                </tr>\n                {!isRowCollapsed(key, index1, index2) && (\n                  <tr>\n                    <td colSpan=\"3\">Additional information for {key} {index1} {index2}</td>\n                  </tr>\n                )}\n              </React.Fragment>\n            ))\n          )}\n        </tbody>\n      </table>\n    );\n  };\n\n  return <div>{renderTable()}</div>;\n}\n\nexport default CollapsibleTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}